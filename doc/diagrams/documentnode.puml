@startuml

interface  DocumentNode<VisitorType> <<interface>> {
{abstract} accept(VisitorType)
}
interface  DocumentArray<VisitorType> <<interface>> {
{abstract} getValueList() : List<DocumentNode<? extends VisitorType>>
{abstract} getValue(index) : DocumentNode<VisitorType>
}
interface  DocumentObject<VisitorType> <<interface>> {
{abstract} getKeyValueMap()
{abstract} get(key)
{abstract} hasKey(key)
}
interface  DocumentValue<VisitorType> <<interface>> {
}

interface  DynamodbVisitor <<interface>> {
{abstract} visit(DynamodbList)
{abstract} visit(DynamodbStringSet)
{abstract} visit(DynamodbObject)
{abstract} visit(DynamodbString)
{abstract} visit(DynamodbNumber)
}

DocumentNode <|-- DocumentArray
DocumentNode <|-- DocumentObject
DocumentNode <|-- DocumentValue

DocumentArray <|-- DynamodbList
DocumentArray <|-- DynamodbStringSet
DocumentObject <|-- DynamodbObject
DocumentValue <|-- DynamodbString
DocumentValue <|-- DynamodbNumber

class DynamodbList{
accept(DynamodbVisitor)
}

class DynamodbStringSet{
accept(DynamodbVisitor)
}

class DynamodbObject{
accept(DynamodbVisitor)
}

class DynamodbString{
accept(DynamodbVisitor)
}

class DynamodbNumber{
accept(DynamodbVisitor)
}

@enduml
