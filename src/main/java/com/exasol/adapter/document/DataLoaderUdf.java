package com.exasol.adapter.document;

import java.io.IOException;

import com.exasol.*;
import com.exasol.adapter.document.documentfetcher.DocumentFetcher;

/**
 *
 */
public interface DataLoaderUdf {

    /**
     * Run the import and processing of the document data. The input rows for this UDF are generated by the
     * {@link UdfCallBuilder}. Each row contains a different {@link DocumentFetcher}. Each {@link DocumentFetcher} can
     * then generates again many result rows.
     *
     * @param exaMetadata Exasol metadata
     * @param exaIterator Exasol iterator containing the input rows and used for emitting the result rows
     * @throws ClassNotFoundException       if deserialization fails
     * @throws ExaIterationException        on illegal access on the iterator
     * @throws ExaDataTypeException         if input data types are wrong (should not happen if called by
     *                                      {@link UdfCallBuilder})
     * @throws IOException                  if deserialization fails
     * @throws ExaConnectionAccessException if accessing the connection information is not allowed
     */
    public void run(final ExaMetadata exaMetadata, final ExaIterator exaIterator) throws ClassNotFoundException,
            ExaIterationException, ExaDataTypeException, IOException, ExaConnectionAccessException;
}
